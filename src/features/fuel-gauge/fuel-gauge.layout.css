/* ==========================================================================
   FUEL GAUGE - Layout Structure

   Base flexbox structure for horizontal fuel gauge with equal-width segments.
   Two-layer animation architecture: parent controls fill width, pseudo-element
   controls color pulse.

   ðŸ”’ CEMENT: Two-layer animation architecture
   - Container: Equal-width flex segments with 5px spacing
   - Segment: Relative positioning with overflow hidden for fill animation
   - Progress bar: Absolute positioned with width 0â†’100% animation
   - Pseudo-element: Color pulse animation synchronized with width fill

   Architecture: Nested flex and absolute positioning
   â”œâ”€â”€ .fuel-gauge-container - Flex container with equal segment distribution
   â”œâ”€â”€ .fuel-segment - Individual segments with relative positioning
   â””â”€â”€ .segment-progress - Absolute progress bar (width animation)
       â””â”€â”€ ::after pseudo - Color pulse layer (color animation)

   Dependencies:
   Global: _variables.css (--fuel-gauge-height, --surface-dark-accent,
           --border-radius, --primary-blue-dark)
   Parent: fuel-gauge.style.css

   Used by: Fuel gauge segments via fuel-gauge.colors.css animation states
   ========================================================================== */

/* === BASE STRUCTURE === */
.fuel-gauge-container {
  display: flex;
  justify-content: space-between;
  height: var(--fuel-gauge-height);
  flex-grow: 1;
}

.fuel-segment {
  flex-grow: 1;
  background-color: var(--surface-dark-accent);
  border-radius: var(--border-radius);
  margin-right: 5px;
  position: relative;
  overflow: hidden;
}

.fuel-segment:last-child {
  margin-right: 0;
}

/* === PROGRESS BAR STRUCTURE === */
/* Two-part animation: parent controls width, pseudo controls color */
.segment-progress {
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 0%;
  background-color: transparent;
  border-top-right-radius: var(--border-radius);
  border-bottom-right-radius: var(--border-radius);
}

.segment-progress::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--primary-blue-dark);
  border-top-right-radius: var(--border-radius);
  border-bottom-right-radius: var(--border-radius);
  animation-delay: inherit; /* Sync with parent */
}